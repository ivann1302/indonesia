import fs from 'fs';

console.log('üñ±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–∞ –¥–ª—è destination images:\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º CSS hover —ç—Ñ—Ñ–µ–∫—Ç—ã
function checkHoverEffects() {
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS hover —ç—Ñ—Ñ–µ–∫—Ç–æ–≤:');
    
    const css = fs.readFileSync('style.css', 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º hover –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const hasMainHover = css.includes('.destination-section__image:hover') && 
                        css.includes('transform: scale(1.07)') &&
                        css.includes('!important');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º hover –¥–ª—è reverse –±–ª–æ–∫–∞
    const hasReverseHover = css.includes('.destination-section__block--reverse .destination-section__image:hover') && 
                           css.includes('transform: scale(1.07)') &&
                           css.includes('!important');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º transition –¥–ª—è hover
    const hasHoverTransition = css.includes('transition: transform 0.4s ease') && 
                              css.includes('!important');
    
    console.log(`‚úÖ Hover –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${hasMainHover ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`‚úÖ Hover –¥–ª—è reverse –±–ª–æ–∫–∞: ${hasReverseHover ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`‚úÖ Transition –¥–ª—è hover: ${hasHoverTransition ? '–î–∞' : '–ù–µ—Ç'}`);
    
    return hasMainHover && hasReverseHover && hasHoverTransition;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º SCSS —Ñ–∞–π–ª
function checkSCSSFile() {
    console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ SCSS —Ñ–∞–π–ª–∞:');
    
    const scss = fs.readFileSync('scss/layout/destination-section.scss', 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º hover –ø—Ä–∞–≤–∏–ª–∞ –≤ SCSS
    const checks = [
        { name: 'Main hover rule', text: '&:hover', found: scss.includes('&:hover') },
        { name: 'Scale transform', text: 'scale(1.07)', found: scss.includes('scale(1.07)') },
        { name: 'Important flag', text: '!important', found: scss.includes('!important') },
        { name: 'Hover transition', text: 'transition: transform 0.4s ease', found: scss.includes('transition: transform 0.4s ease') },
        { name: 'Reverse block hover', text: '.destination-section__block--reverse', found: scss.includes('.destination-section__block--reverse') }
    ];
    
    let passedChecks = 0;
    checks.forEach(check => {
        const status = check.found ? '‚úÖ' : '‚ùå';
        console.log(`${status} ${check.name}: ${check.found ? 'Found' : 'Not found'}`);
        if (check.found) passedChecks++;
    });
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${passedChecks}/${checks.length} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ\n`);
    
    return passedChecks === checks.length;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã CSS
function checkCSSConflicts() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:');
    
    const css = fs.readFileSync('style.css', 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö transform –ø—Ä–∞–≤–∏–ª
    const hasConflictingTransforms = css.includes('transform: translateX(0)') && 
                                    css.includes('transform: scale(1.07)') &&
                                    css.includes('!important');
    
    console.log(`‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã transform —Ä–∞–∑—Ä–µ—à–µ–Ω—ã: ${hasConflictingTransforms ? '–î–∞' : '–ù–µ—Ç'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ CSS –ø—Ä–∞–≤–∏–ª
    const hasCorrectOrder = css.indexOf('transform: scale(1.07)') > css.indexOf('transform: translateX(0)');
    console.log(`‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ CSS –ø—Ä–∞–≤–∏–ª: ${hasCorrectOrder ? '–î–∞' : '–ù–µ—Ç'}`);
    
    return hasConflictingTransforms && hasCorrectOrder;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
function generateReport() {
    console.log('üìã –û—Ç—á–µ—Ç –æ hover —ç—Ñ—Ñ–µ–∫—Ç–µ:\n');
    
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    console.log('‚Ä¢ ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω hover —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ (reverse block)');
    console.log('‚Ä¢ ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω !important –¥–ª—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏');
    console.log('‚Ä¢ ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π transition –¥–ª—è hover (0.4s ease)');
    console.log('‚Ä¢ ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç –º–µ–∂–¥—É –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏ hover');
    
    console.log('\nüé® CSS hover —ç—Ñ—Ñ–µ–∫—Ç—ã:');
    console.log('‚Ä¢ üñºÔ∏è –ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞: scale(1.07) –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏');
    console.log('‚Ä¢ üñºÔ∏è –í—Ç–æ—Ä–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞: scale(1.07) –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏');
    console.log('‚Ä¢ ‚è±Ô∏è Transition: 0.4s ease –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏');
    console.log('‚Ä¢ üéØ !important: –¥–ª—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏');
    
    console.log('\nüéØ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:');
    console.log('‚Ä¢ üìù Hover –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é !important');
    console.log('‚Ä¢ üöÄ –û—Ç–¥–µ–ª—å–Ω—ã–π transition –¥–ª—è hover (–±—ã—Å—Ç—Ä–µ–µ –∞–Ω–∏–º–∞—Ü–∏–∏)');
    console.log('‚Ä¢ üé® –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø–ª–∞–≤–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏');
    console.log('‚Ä¢ üì± –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
    
    console.log('\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('–û–±–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ destination-section —Ç–µ–ø–µ—Ä—å —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏!');
    console.log('Hover —ç—Ñ—Ñ–µ–∫—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è.');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
const hoverOk = checkHoverEffects();
const scssOk = checkSCSSFile();
const conflictsOk = checkCSSConflicts();

console.log('\n' + '='.repeat(50));
console.log('üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
console.log('='.repeat(50));

if (hoverOk && scssOk && conflictsOk) {
    console.log('üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('‚úÖ Hover —ç—Ñ—Ñ–µ–∫—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –¥–ª—è –æ–±–µ–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫');
    console.log('‚úÖ CSS –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã');
    console.log('‚úÖ SCSS –∫–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
} else {
    console.log('‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:');
    if (!hoverOk) console.log('‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å hover —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏');
    if (!scssOk) console.log('‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å SCSS –∫–æ–¥–æ–º');
    if (!conflictsOk) console.log('‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å CSS –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏');
}

generateReport();
